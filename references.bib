@article{budimanWebPerformanceOptimization2019,
  title = {Web {{Performance Optimization Techniques}} for {{Biodiversity
           Resource Portal}}},
  author = {Budiman, Edy and Puspitasari, Novianti and Wati, Masna and Widians,
            Joan Angelina and {Haviluddin}},
  date = {2019-07-01},
  journaltitle = {Journal of Physics: Conference Series},
  shortjournal = {J. Phys.: Conf. Ser.},
  volume = {1230},
  number = {1},
  pages = {012011},
  issn = {1742-6588, 1742-6596},
  doi = {10.1088/1742-6596/1230/1/012011},
  url = {https://iopscience.iop.org/article/10.1088/1742-6596/1230/1/012011},
  urldate = {2024-10-30},
  abstract = {Abstract Monitoring and evaluation is a part of management that
              must be done if want to an increase, and improvement in
              performance. Therefore, these activities are needed as an effort to
              develop, manage and optimize the Biodiversity Resource Portal. This
              study aims to analyze the efficiency of the Biodiversity resource
              portal of the key performance indicators on Image and script (CSS /
              JScript) content. Pre-Test and Post-Test analysis methods using Web
              Performance Optimization Techniques. Evaluation the test results
              showed an increase in end-to-end web performance after optimization
              , from the efficiency score of pretest Grade F (13\%) to Grade B
              (82\%) post-test.},
}

@inproceedings{liWebFrontEndRealtime2019,
  title = {Web {{Front-End Realtime Face Recognition Based}} on {{TFJS}}},
  booktitle = {2019 12th {{International Congress}} on {{Image}} and {{Signal
               Processing}}, {{BioMedical Engineering}} and {{Informatics}} ({{
               CISP-BMEI}})},
  author = {Li, Chenyang and Li, Chunfang},
  date = {2019-10},
  pages = {1--5},
  publisher = {IEEE},
  location = {Suzhou, China},
  doi = {10.1109/CISP-BMEI48845.2019.8965963},
  url = {https://ieeexplore.ieee.org/document/8965963/},
  urldate = {2024-10-30},
  eventtitle = {2019 12th {{International Congress}} on {{Image}} and {{Signal
                Processing}}, {{BioMedical Engineering}} and {{Informatics}} ({{
                CISP-BMEI}})},
  isbn = {978-1-72814-852-6},
  file = {/home/fadillads/Zotero/storage/6WSKR8VZ/Li and Li - 2019 - Web
          Front-End Realtime Face Recognition Based on TFJS.pdf},
}

@article{ogundeyiWebSocketRealTime2019,
  title = {{{WebSocket}} in Real Time Application},
  author = {Ogundeyi, K.E. and Yinka-Banjo, C},
  date = {2019-12-12},
  journaltitle = {Nigerian Journal of Technology},
  shortjournal = {Nig. J. Tech.},
  volume = {38},
  number = {4},
  pages = {1010},
  issn = {2467-8821, 0331-8443},
  doi = {10.4314/njt.v38i4.26},
  url = {https://www.ajol.info/index.php/njt/article/view/191780},
  urldate = {2024-10-30},
  file = {/home/fadillads/Zotero/storage/HKW7UF4M/Ogundeyi and Yinka-Banjo -
          2019 - WebSocket in real time application.pdf},
}

@article{archanaRealTimeFace2022,
  title = {Real Time {{Face Detection}} and {{Optimal Face Mapping}} for {{
           Online Classes}}},
  author = {Archana, Mcp and Nitish, Ck and Harikumar, Sandhya},
  date = {2022-01-01},
  journaltitle = {Journal of Physics: Conference Series},
  shortjournal = {J. Phys.: Conf. Ser.},
  volume = {2161},
  number = {1},
  pages = {012063},
  issn = {1742-6588, 1742-6596},
  doi = {10.1088/1742-6596/2161/1/012063},
  url = {https://iopscience.iop.org/article/10.1088/1742-6596/2161/1/012063},
  urldate = {2024-10-30},
  abstract = {Abstract The main objective of this paper is to provide a
              web-based tool for identifying faces in a real-time environment,
              such as Online Classes. Face recognition in real-time is now a
              fascinating field with an ever-increasing challenge such as light
              variations, occlusion, variation in facial expressions, etc. During
              the current pandemic scenario of COVID-19, the demand for online
              classrooms has rapidly increased. This has escalated the need for a
              real-time, economic, simple, and convenient way to track the
              attendance of the students in a live classroom. This paper
              addresses the aforementioned issue by proposing a real-time online
              attendance system. Two alternative face recognition algorithms are
              perceived in order to develop the tool for realtime face detection
              and recognition with improved accuracy. The algorithms adopted are
              Local Binary Pattern Histogram(LBPH) and Convolutional Neural
              Network (CNN) for face recognition as well as Haar cascade
              classifier with boosting for face detection. Experimental results
              show that CNN with an accuracy of 95\% is better in this context
              than LBPH that yields an accuracy of 78\%.},
  file = {/home/fadillads/Zotero/storage/LLP26LFP/Archana et al. - 2022 - Real
          time Face Detection and Optimal Face Mapping for Online
          Classes.pdf;/home/fadillads/Zotero/storage/X7KLQP7R/Archana et al. -
          2022 - Real time Face Detection and Optimal Face Mapping for Online
          Classes.pdf},
}

@inproceedings{bykovWebApplicationDevelopment2020,
  title = {Web {{Application Development}} for {{Biometric Identification System
           Based}} on {{Neural Network Face Recognition}}},
  booktitle = {2020 {{Systems}} of {{Signals Generating}} and {{Processing}} in
               the {{Field}} of on {{Board Communications}}},
  author = {Bykov, A. D. and Voronov, V. I. and Voronova, L. I. and Zharov, I.
            A.},
  date = {2020-03},
  pages = {1--6},
  doi = {10.1109/IEEECONF48371.2020.9078654},
  url = {https://ieeexplore.ieee.org/abstract/document/9078654},
  urldate = {2024-10-29},
  abstract = {The article describes the structural analysis of the developed
              biometric identification complex with a description of the
              architecture of the complex and its hardware and software
              components, design and development of web applications operators,
              as well as performance testing of important modules of the web
              application. Biometric identification complex under development can
              be applied in various spheres where access control to various
              important parts is required, for example in airports and its
              control zones. This work was supported by an internal MTUCI grant.},
  eventtitle = {2020 {{Systems}} of {{Signals Generating}} and {{Processing}} in
                the {{Field}} of on {{Board Communications}}},
  keywords = {Biometrics (access control),complex of biometric identification,
              development,Face recognition,Hardware,Jaeger,Neural networks,Query
              processing,Service-oriented architecture,Software,template MVC,
              testing,web application design},
  file = {/home/fadillads/Zotero/storage/94S3594F/Bykov et al. - 2020 - Web
          Application Development for Biometric Identification System Based on
          Neural Network Face Recogni.pdf},
}

@article{fowdurRealtimeMachineLearning2024,
  title = {A Real-Time Machine Learning Application for Browser Extension
           Security Monitoring},
  author = {Fowdur, Tulsi Pawan and Hosenally, Shua√Øb},
  date = {2024-01-02},
  journaltitle = {Information Security Journal: A Global Perspective},
  shortjournal = {Information Security Journal: A Global Perspective},
  volume = {33},
  number = {1},
  pages = {16--41},
  issn = {1939-3555, 1939-3547},
  doi = {10.1080/19393555.2022.2128944},
  url = {https://www.tandfonline.com/doi/full/10.1080/19393555.2022.2128944},
  urldate = {2024-11-10},
  langid = {english},
}

@online{jinImpactExtensionsBrowser2024,
  title = {Impact of {{Extensions}} on {{Browser Performance}}: {{An Empirical
           Study}} on {{Google Chrome}}},
  shorttitle = {Impact of {{Extensions}} on {{Browser Performance}}},
  author = {Jin, Bihui and Li, Heng and Zou, Ying},
  date = {2024-04-10},
  eprint = {2404.06827},
  eprinttype = {arXiv},
  doi = {10.48550/arXiv.2404.06827},
  url = {http://arxiv.org/abs/2404.06827},
  urldate = {2024-11-10},
  abstract = {Web browsers have been used widely by users to conduct various
              online activities, such as information seeking or online shopping.
              To improve user experience and extend the functionality of browsers
              , practitioners provide mechanisms to allow users to install
              third-party-provided plugins (i.e., extensions) on their browsers.
              However, little is known about the performance implications caused
              by such extensions. In this paper, we conduct an empirical study to
              understand the impact of extensions on the user-perceived
              performance (i.e., energy consumption and page load time) of Google
              Chrome, the most popular browser. We study a total of 72
              representative extensions from 11 categories (e.g., Developer Tools
              and Sports). We observe that browser performance can be negatively
              impacted by the use of extensions, even when the extensions are
              used in unintended circumstances (e.g., when logging into an
              extension is not granted but required, or when an extension is not
              used for designated websites). We also identify a set of factors
              that significantly influence the performance impact of extensions,
              such as code complexity and privacy practices (i.e., collection of
              user data) adopted by the extensions. Based on our empirical
              observations, we provide recommendations for developers and users
              to mitigate the performance impact of browser extensions, such as
              conducting performance testing and optimization for unintended
              usage scenarios of extensions, or adhering to proper usage
              practices of extensions (e.g., logging into an extension when
              required).},
  pubstate = {prepublished},
  keywords = {Computer Science - Human-Computer Interaction,Computer Science -
              Performance,Computer Science - Software Engineering},
  file = {/home/fadillads/Zotero/storage/BMF4X77C/Jin et al. - 2024 - Impact of
          Extensions on Browser Performance An Empirical Study on Google
          Chrome.pdf;/home/fadillads/Zotero/storage/X3UIUQLA/2404.html},
}

@article{giannakopoulosCloudApplicationDeployment2018,
  title = {Cloud Application Deployment with Transient Failure Recovery},
  author = {Giannakopoulos, Ioannis and Konstantinou, Ioannis and Tsoumakos,
            Dimitrios and Koziris, Nectarios},
  date = {2018-12},
  journaltitle = {Journal of Cloud Computing},
  shortjournal = {J Cloud Comp},
  volume = {7},
  number = {1},
  pages = {11},
  issn = {2192-113X},
  doi = {10.1186/s13677-018-0112-9},
  url = {
         https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-018-0112-9
         },
  urldate = {2025-02-07},
  langid = {english},
  file = {/home/fadil/Zotero/storage/NTXINSED/Giannakopoulos et al. - 2018 -
          Cloud application deployment with transient failure recovery.pdf},
}

@article{singhLoadBalancingService2023,
  title = {Load Balancing and Service Discovery Using {{Docker Swarm}} for
           Microservice Based Big Data Applications},
  author = {Singh, Neelam and Hamid, Yasir and Juneja, Sapna and Srivastava,
            Gautam and Dhiman, Gaurav and Gadekallu, Thippa Reddy and Shah, Mohd
            Asif},
  date = {2023-01-07},
  journaltitle = {Journal of Cloud Computing},
  shortjournal = {J Cloud Comp},
  volume = {12},
  number = {1},
  pages = {4},
  issn = {2192-113X},
  doi = {10.1186/s13677-022-00358-7},
  url = {
         https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-022-00358-7
         },
  urldate = {2025-02-07},
  abstract = {Abstract Big Data applications require extensive resources and
              environments to store, process and analyze this colossal collection
              of data in a distributed manner. Containerization with cloud
              computing provides a pertinent remedy to accommodate big data
              requirements, however requires a precise and appropriate
              load-balancing mechanism. The load on servers increases
              exponentially with increased resource usage thus making load
              balancing an essential requirement. Moreover, the adjustment of
              containers accurately and rapidly according to load as per services
              is one of the crucial aspects in big data applications. This study
              provides a review relating to containerized environments like
              Docker for big data applications with load balancing. A novel
              scheduling mechanism of containers for big data applications
              established on Docker Swarm and Microservice architecture is
              proposed. The concept of Docker Swarm is utilized to effectively
              handle big data applications' workload and service discovery.
              Results shows that increasing workloads with respect to big data
              applications can be effectively managed by utilizing microservices
              in containerized environments and load balancing is efficiently
              achieved using Docker Swarm. The implementation is done using a
              case study deployed on a~single server and then scaled to four
              instances. Applications developed using containerized microservices
              reduces average deployment time and continuous integration.},
  langid = {english},
  file = {/home/fadil/Zotero/storage/7W3EUUGY/Singh et al. - 2023 - Load
          balancing and service discovery using Docker Swarm for microservice
          based big data applications.pdf},
}

@article{qianLoadBalancingScheduling2023,
  title = {Load Balancing Scheduling Mechanism for {{OpenStack}} and {{Docker}}
           Integration},
  author = {Qian, Jiarui and Wang, Yong and Wang, Xiaoxue and Zhang, Peng and
            Wang, Xiaofeng},
  date = {2023-04-28},
  journaltitle = {Journal of Cloud Computing},
  shortjournal = {J Cloud Comp},
  volume = {12},
  number = {1},
  pages = {67},
  issn = {2192-113X},
  doi = {10.1186/s13677-023-00445-3},
  url = {
         https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-023-00445-3
         },
  urldate = {2025-02-07},
  abstract = {Abstract With the development of cloud-edge collaborative
              computing, cloud computing has become crucial in data analysis and
              data processing. OpenStack and Docker are important components of
              cloud computing, and the integration of the two has always
              attracted widespread attention in industry. The scheduling
              mechanism adopted by the existing fusion solution uses a uniform
              resource weight for all containers, and the computing nodes
              resources on the cloud platform is unbalanced under differentiated
              resource requirements of the containers. Therefore, considering
              different network communication qualities, a load-balancing Docker
              scheduling mechanism based on OpenStack is proposed to meet the
              needs of various resources (CPU, memory, disk, and bandwidth) of
              containers. This mechanism uses the precise limitation strategy for
              container resources and a centralized strategy for container
              resources as the scheduling basis, and it generates exclusive
              weights for containers through a filtering stage, a weighing stage
              based on weight adaptation, and a non-uniform memory access (NUMA)
              lean stage. The experimental results show that, compared with
              Nova-docker and Yun, the proposed mechanism reduces the resource
              load imbalance within a node by 57.35\% and 59.00\% on average, and
              the average imbalance between nodes is reduced by 53.53\% and 50.90
              \%. This mechanism can also achieve better load balancing without
              regard to bandwidth.},
  langid = {english},
  file = {/home/fadil/Zotero/storage/TLNXUDUG/Qian et al. - 2023 - Load
          balancing scheduling mechanism for OpenStack and Docker integration.pdf
          },
}
